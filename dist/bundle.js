/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["YourPackageName"] = factory();
	else
		root["YourPackageName"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/bounce.js":
/*!***********************!*\
  !*** ./src/bounce.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bounceinbottom: () => (/* binding */ bounceinbottom),\n/* harmony export */   bounceinleft: () => (/* binding */ bounceinleft),\n/* harmony export */   bounceinright: () => (/* binding */ bounceinright),\n/* harmony export */   bounceintop: () => (/* binding */ bounceintop)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n\n\n// Function to create and run the animation\nfunction bounceinright(element, duration, classNameList)  {\n\n    const keyframes = [\n      { opacity: 0, transform: 'translateX(100%)', offset: 0 },\n      { opacity: 1, transform: 'translateX(-10%)', offset: 0.6 },\n      { transform: 'translateX(10%)', offset: 0.8 },\n      { transform: 'translateX(0)', offset: 1 }\n    ];\n  \n    const options = {\n      duration: parseFloat(duration), // Animation duration in milliseconds\n      easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll( '/' , ',' ), // Easing function\n      fill: 'forwards' // Keeps the final state of the animation\n    };\n    return element.animate(keyframes, options);\n  }\n  \nfunction bounceintop(element, duration, classNameList)  {\n    const keyframes = [\n        { opacity: 0, transform: 'translateY(100%)', offset: 0 },\n        { opacity: 1, transform: 'translateY(-10%)', offset: 0.6 },\n        { transform: 'translateY(10%)', offset: 0.8 },\n        { transform: '(0)', offset: 1 }\n    ];\n  \n    const options = {\n      duration: parseFloat(duration), // Animation duration in milliseconds\n      easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll( '/' , ',' ), // Easing function\n      fill: 'forwards' // Keeps the final state of the animation\n    };\n    return element.animate(keyframes, options);\n  }\n\n// Function to create and run the animation\nfunction bounceinleft(element, duration, classNameList)  {\n    const keyframes = [\n      { opacity: 0, transform: 'translateX(-100%)', offset: 0 },\n      { opacity: 1, transform: 'translateX(10%)', offset: 0.6 },\n      { transform: 'translateX(-10%)', offset: 0.8 },\n      { transform: 'translateX(0)', offset: 1 }\n    ];\n  \n    const options = {\n      duration: parseFloat(duration), // Animation duration in milliseconds\n      easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll( '/' , ',' ), // Easing function\n      fill: 'forwards' // Keeps the final state of the animation\n    };\n  \n    return element.animate(keyframes, options);\n  }\n  \nfunction bounceinbottom(element, duration, classNameList)  {\n    const keyframes = [\n        { opacity: 0, transform: 'translateY(-100%)', offset: 0 },\n        { opacity: 1, transform: 'translateY(10%)', offset: 0.6 },\n        { transform: 'translateY(-10%)', offset: 0.8 },\n        { transform: '(0)', offset: 1 }\n    ];\n  \n    const options = {\n      duration: parseFloat(duration), // Animation duration in milliseconds\n      easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll( '/' , ',' ), // Easing function\n      fill: 'forwards' // Keeps the final state of the animation\n    };\n    return element.animate(keyframes, options);\n  }\n\n//# sourceURL=webpack://YourPackageName/./src/bounce.js?");

/***/ }),

/***/ "./src/fade.js":
/*!*********************!*\
  !*** ./src/fade.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fadein: () => (/* binding */ fadein),\n/* harmony export */   fadeout: () => (/* binding */ fadeout)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n/* harmony import */ var _utils_animation_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/animation-constant */ \"./utils/animation-constant.js\");\n// Import necessary functions from the cubic-bizer module\n\n\n\n\n\n/**\n * Executes a smooth fade-out animation on a given DOM element.\n *\n * @param {HTMLElement} element - The target element to apply the fade-out animation.\n * @param {number} duration - Duration of the fade-out animation in milliseconds.\n * @param {Array<string>} classNameList - List of class names that may contain animation timing functions.\n */\nfunction fadeout(element, duration, classNameList) {\n    // Determine the appropriate animation timing function from the provided class names.\n    let animationTimingFunction = (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList);\n    \n    // Extract cubic-bezier control points, either from the class or a default configuration.\n    let cubicBeizerTiming = animationTimingFunction.includes('cubic-bezier') \n        ? (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.extractCubicBezier)(animationTimingFunction) \n        : (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.extractCubicBezier)(_utils_animation_constant__WEBPACK_IMPORTED_MODULE_1__.defaultAnimationTiming[animationTimingFunction]);\n    // Compute the interval duration by dividing the animation duration by the number of opacity steps (100).\n    let interval = duration / 100;\n    let index = 0;\n\n    // Generate a sequence of opacity values based on the cubic-bezier control points over a standard duration (1000ms).\n    var timing = (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.generateOpacityValues)(...cubicBeizerTiming, 1000);\n    \n    // Set the element's initial opacity to fully visible.\n    element.style.opacity = 1;\n\n    // Establish an interval that will gradually reduce the element's opacity.\n    const intervalID = setInterval(() => {\n        // Decrease the opacity based on the timing array value corresponding to the current index.\n        element.style.opacity = parseFloat(element.style.opacity) - (timing[index] / 1);\n        index += 1;\n        \n        // Terminate the interval if the opacity reaches or falls below a minimal threshold.\n        if (element.style.opacity <= 0 || element.style.opacity <= 0.001) {\n            clearInterval(intervalID);\n        }\n    }, interval);\n};\n\n/**\n * Executes a smooth fade-in animation on a given DOM element.\n *\n * @param {HTMLElement} element - The target element to apply the fade-in animation.\n * @param {number} duration - Duration of the fade-in animation in milliseconds.\n * @param {Array<string>} classNameList - List of class names that may contain animation timing functions.\n */\nfunction fadein(element, duration, classNameList) {\n    // Determine the appropriate animation timing function from the provided class names.\n    let animationTimingFunction = (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList);\n    \n    // Extract cubic-bezier control points, either from the class or a default configuration.\n    let cubicBeizerTiming = animationTimingFunction.includes('cubic-bezier') \n        ? (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.extractCubicBezier)(animationTimingFunction) \n        : (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.extractCubicBezier)(_utils_animation_constant__WEBPACK_IMPORTED_MODULE_1__.defaultAnimationTiming[animationTimingFunction]);\n\n    // Compute the interval duration by dividing the animation duration by the number of steps (100).\n    let interval = duration / 100;\n    let index = 0;\n\n    // Generate a sequence of opacity values based on the cubic-bezier control points over a standard duration (1000ms).\n    var timing = (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.generateOpacityValues)(...cubicBeizerTiming, 1000);\n    \n    // Set the element's initial opacity to fully transparent.\n    element.style.opacity = 0;\n\n    // Establish an interval that will gradually increase the element's opacity.\n    const intervalID = setInterval(() => {\n        // Increase the opacity based on the timing array value corresponding to the current index.\n        element.style.opacity = parseFloat(element.style.opacity) + (timing[index] / 1);\n        index += 1;\n        \n        // Terminate the interval when the opacity reaches or exceeds 1.\n        if (index >= timing.length || element.style.opacity >= 1) {\n            element.style.opacity = 1; // Ensure final opacity is exactly 1.\n            clearInterval(intervalID);\n        }\n    }, interval);\n};\n\n//# sourceURL=webpack://YourPackageName/./src/fade.js?");

/***/ }),

/***/ "./src/fancyslide.js":
/*!***************************!*\
  !*** ./src/fancyslide.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fancySlide: () => (/* binding */ fancySlide),\n/* harmony export */   fancySlideReverse: () => (/* binding */ fancySlideReverse)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n // Importing a utility function to get cubic-bezier easing based on class names\n\n/**\n * Function to create and run the fancy slide animation with customizable duration and easing\n * \n * @param {HTMLElement} element - The HTML element to animate\n * @param {string} duration - The duration of the animation in milliseconds\n * @param {Array} classNameList - List of class names used to find the cubic-bezier easing function\n * \n * @returns {Animation} - Returns the animation object to allow for further control\n */\nfunction fancySlide(element, duration, classNameList) {\n    \n    // Getting the element's width in pixels and converting it to a number\n    const elementWidth = parseFloat((element.style.width).replace('px', ''));\n    \n    // Defining the keyframes for the animation\n    const keyframes = [\n        { \n            transform: 'translateX(100%) skewX(10deg)', // Start off-screen with a skew\n            opacity: 0,                                 // Element is initially transparent\n            width: `${elementWidth * 5}px`,             // Width starts larger than the original\n            offset: 0                                   // Start of animation\n        },\n        { \n            transform: 'translateX(0) skewX(0)',        // Element slides into its final position with no skew\n            opacity: 1,                                 // Fully visible\n            width: `${elementWidth}px`,                 // Width returns to the original size\n            offset: 1                                   // End of animation\n        }\n    ];\n\n    // Animation options including duration and easing\n    const options = {\n        duration: parseFloat(duration),                 // Animation duration in milliseconds\n        easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function found using class names, replacing '/' with ','\n        fill: 'forwards'                               // Keeps the final state after animation completes\n    };\n\n    // Runs the animation on the element using the defined keyframes and options\n    return element.animate(keyframes, options);\n}\n\n/**\n * Function to create and run the fancy slide animation with customizable duration and easing\n * \n * @param {HTMLElement} element - The HTML element to animate\n * @param {string} duration - The duration of the animation in milliseconds\n * @param {Array} classNameList - List of class names used to find the cubic-bezier easing function\n * \n * @returns {Animation} - Returns the animation object to allow for further control\n */\nfunction fancySlideReverse(element, duration, classNameList) {\n    \n    // Getting the element's width in pixels and converting it to a number\n    const elementWidth = parseFloat((element.style.width).replace('px', ''));\n    \n    // Defining the keyframes for the animation\n    const keyframes = [\n        { \n            transform: 'translateX(-100%) skewX(-10deg)', // Start off-screen with a skew\n            opacity: 0,                                 // Element is initially transparent\n            width: `${elementWidth * 5}px`,             // Width starts larger than the original\n            offset: 0                                   // Start of animation\n        },\n        { \n            transform: 'translateX(0) skewX(0)',        // Element slides into its final position with no skew\n            opacity: 1,                                 // Fully visible\n            width: `${elementWidth}px`,                 // Width returns to the original size\n            offset: 1                                   // End of animation\n        }\n    ];\n\n    // Animation options including duration and easing\n    const options = {\n        duration: parseFloat(duration),                 // Animation duration in milliseconds\n        easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function found using class names, replacing '/' with ','\n        fill: 'forwards'                               // Keeps the final state after animation completes\n    };\n\n    // Runs the animation on the element using the defined keyframes and options\n    return element.animate(keyframes, options);\n}\n\n\n//# sourceURL=webpack://YourPackageName/./src/fancyslide.js?");

/***/ }),

/***/ "./src/flip.js":
/*!*********************!*\
  !*** ./src/flip.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flip: () => (/* binding */ flip),\n/* harmony export */   flipvertical: () => (/* binding */ flipvertical)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n\n\n// 🛠️ Function to run an infinite vertical flip animation like a Sigma\n// ⚙️ Parameters:\n// - element: The DOM element to be animated\n// - duration: The time (in ms) for a full flip\n// - classNameList: List of classes to dynamically adjust the easing function\nfunction flipvertical(element, duration, classNameList) {\n\n  // 💡 Defining keyframes for the vertical flip\n  const keyframes = [\n      { transform: 'rotateX(0deg)', offset: 0 },       // 📍 Start at 0° rotation (no flip)\n      { transform: 'rotateX(360deg)', offset: 1 }      // 🔄 Complete 360° flip\n  ];\n\n  // 🎛️ Defining animation options\n  const options = {\n    duration: parseFloat(duration), // 🕒 Parse the provided duration into milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // 🎯 Dynamically generate easing\n    fill: 'forwards', // 📌 Keeps the final flip state when animation ends\n    iterations: Infinity // 🔁 Run this animation in an endless loop\n  };\n\n  // 🔥 Return the animation attached to the element\n  return element.animate(keyframes, options);\n}\n\n// 🛠️ Function to run an infinite horizontal flip animation like a Sigma\n// ⚙️ Parameters:\n// - element: The DOM element to be animated\n// - duration: The time (in ms) for a full flip\n// - classNameList: List of classes to dynamically adjust the easing function\nfunction flip(element, duration, classNameList) {\n\n  // 💡 Defining keyframes for the horizontal flip\n  const keyframes = [\n      { transform: 'rotateY(0deg)', offset: 0 },        // 📍 Start at 0° rotation (no flip)\n      { transform: 'rotateY(360deg)', offset: 1 }      // 🔄 Complete a negative 360° rotation\n  ];\n\n  // 🎛️ Defining animation options\n  const options = {\n    duration: parseFloat(duration), // 🕒 Parse the provided duration into milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // 🎯 Dynamically generate easing\n    fill: 'forwards', // 📌 Keeps the final flip state when animation ends\n    iterations: Infinity // 🔁 Run this animation in an endless loop\n  };\n\n  // 🔥 Return the animation attached to the element\n  return element.animate(keyframes, options);\n}\n\n\n//# sourceURL=webpack://YourPackageName/./src/flip.js?");

/***/ }),

/***/ "./src/jello.js":
/*!**********************!*\
  !*** ./src/jello.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jelloAnimation: () => (/* binding */ jelloAnimation)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n // Import cubic-bezier utility function\n\n/**\n * Function to run the jello animation\n * \n * @param {HTMLElement} element - The HTML element to animate\n * @param {string} duration - The duration of the animation in milliseconds\n * @param {Array} classNameList - List of class names to find the cubic-bezier easing function\n * \n * @returns {Animation} - Returns the animation object for further control\n */\nfunction jelloAnimation(element, duration, classNameList) {\n    // Defining the keyframes for the jello animation\n    const keyframes = [\n        { transform: 'none', offset: 0 },\n        { transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.111 }, // 11.1%\n        { transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.222 },   // 22.2%\n        { transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.333 },// 33.3%\n        { transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.444 },// 44.4%\n        { transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.555 }, // 55.5%\n        { transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.666 }, // 66.6%\n        { transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)', offset: 0.777 }, // 77.7%\n        { transform: 'none', offset: 1 } // 100%\n    ];\n\n    // Animation options including duration and easing\n    const options = {\n        duration: parseFloat(duration),                 // Animation duration in milliseconds\n        easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n        fill: 'forwards'                               // Keep final state after animation\n    };\n\n    // Start the animation on the element\n    return element.animate(keyframes, options);\n}\n\n\n//# sourceURL=webpack://YourPackageName/./src/jello.js?");

/***/ }),

/***/ "./src/pulse.js":
/*!**********************!*\
  !*** ./src/pulse.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pulse: () => (/* binding */ pulse)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n // Importing utility function for finding the easing function\n\n/**\n * Function to create and run the pulse animation.\n * \n * @param {HTMLElement} element - The HTML element to apply the animation to.\n * @param {number} duration - The duration of the animation in milliseconds.\n * @param {Array} classNameList - An array of class names to determine the easing function.\n * \n * @returns {Animation} - Returns the animation object for further control if needed.\n */\nfunction pulse(element, duration, classNameList) {\n\n    // Define keyframes for the pulse animation.\n    // It scales the element and adjusts the opacity to create a \"pulsing\" effect.\n    const keyframes = [\n        { transform: 'scale(1)', opacity: 1, offset: 0 },       // Initial state: normal scale, full opacity\n        { transform: 'scale(1.1)', opacity: 0.7, offset: 0.5 }, // At 50% progress: slight increase in scale, reduced opacity\n        { transform: 'scale(1)', opacity: 1, offset: 1 }        // End state: return to normal scale, full opacity\n    ];\n\n    // Define the animation options, including duration, easing, and fill behavior.\n    const options = {\n        duration: parseFloat(duration), // Converts the input duration to a float and sets it as the animation's duration\n        easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Retrieves the easing function based on classNameList and adjusts its format for CSS\n        fill: 'forwards' // Keeps the element in the final animated state after the animation ends\n    };\n\n    // Apply the animation to the provided element using the defined keyframes and options, and return the animation object\n    return element.animate(keyframes, options);\n}\n\n\n//# sourceURL=webpack://YourPackageName/./src/pulse.js?");

/***/ }),

/***/ "./src/rotate.js":
/*!***********************!*\
  !*** ./src/rotate.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rotateleft: () => (/* binding */ rotateleft),\n/* harmony export */   rotateright: () => (/* binding */ rotateright)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n\n\n// Function to create and run an infinite rotation animation\nfunction rotateright(element, duration, classNameList) {\n\n  const keyframes = [\n    { transform: 'rotate(0deg)', offset: 0 },        // Initial state, no rotation\n    { transform: 'rotate(360deg)', offset: 1 }       // Final state, full 360-degree rotation\n  ];\n\n  const options = {\n    duration: parseFloat(duration), // Animation duration in milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n    fill: 'forwards', // Keeps the final state of the animation\n    iterations: Infinity // Infinite looping of the animation\n  };\n\n  return element.animate(keyframes, options);\n}\n\nfunction rotateleft(element, duration, classNameList) {\n\n    const keyframes = [\n      { transform: 'rotate(0deg)', offset: 0 },        // Initial state, no rotation\n      { transform: 'rotate(-360deg)', offset: 1 }       // Final state, full 360-degree rotation\n    ];\n  \n    const options = {\n      duration: parseFloat(duration), // Animation duration in milliseconds\n      easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n      fill: 'forwards', // Keeps the final state of the animation\n      iterations: Infinity // Infinite looping of the animation\n    };\n  \n    return element.animate(keyframes, options);\n  }\n  \n\n//# sourceURL=webpack://YourPackageName/./src/rotate.js?");

/***/ }),

/***/ "./src/rotate3d.js":
/*!*************************!*\
  !*** ./src/rotate3d.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rotatex0to360: () => (/* binding */ rotatex0to360),\n/* harmony export */   rotatex360to0: () => (/* binding */ rotatex360to0),\n/* harmony export */   rotatexinfinity: () => (/* binding */ rotatexinfinity),\n/* harmony export */   rotatey0to360: () => (/* binding */ rotatey0to360),\n/* harmony export */   rotatey360to0: () => (/* binding */ rotatey360to0),\n/* harmony export */   rotateyinfinity: () => (/* binding */ rotateyinfinity)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n\n\n// Function to create and run an single 3d x-axis rotation animation\nfunction rotatex360to0(element, duration, classNameList) {\n\n  const keyframes = [\n    { transform: 'rotateX(0deg)', offset: 0 },        // Initial state, no rotation\n    { transform: 'rotateX(360deg)', offset: 1 }       // Final state, full 360-degree rotation\n  ];\n\n  const options = {\n    duration: parseFloat(duration), // Animation duration in milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n    fill: 'forwards', // Keeps the final state of the animation\n  };\n\n  return element.animate(keyframes, options);\n}\n\n// Function to create and run an single 3d x-axis reverse rotation animation\nfunction rotatex0to360(element, duration, classNameList) {\n\n  const keyframes = [\n    { transform: 'rotateX(360deg)', offset: 0 },        // Initial state, no rotation\n    { transform: 'rotateX(0deg)', offset: 1 }       // Final state, full 360-degree rotation\n  ];\n\n  const options = {\n    duration: parseFloat(duration), // Animation duration in milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n    fill: 'forwards', // Keeps the final state of the animation\n  };\n\n  return element.animate(keyframes, options);\n}\n\n// Function to create and run an single 3d x-axis reverse rotation animation\nfunction rotatey0to360(element, duration, classNameList) {\n\n  const keyframes = [\n    { transform: 'rotateY(360deg)', offset: 0 },        // Initial state, no rotation\n    { transform: 'rotateY(0deg)', offset: 1 }       // Final state, full 360-degree rotation\n  ];\n\n  const options = {\n    duration: parseFloat(duration), // Animation duration in milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n    fill: 'forwards', // Keeps the final state of the animation\n  };\n\n  return element.animate(keyframes, options);\n}\n\n// Function to create and run an single 3d x-axis rotation animation\nfunction rotatey360to0(element, duration, classNameList) {\n\n    const keyframes = [\n      { transform: 'rotateY(0deg)', offset: 0 },        // Initial state, no rotation\n      { transform: 'rotateY(360deg)', offset: 1 }       // Final state, full 360-degree rotation\n    ];\n  \n    const options = {\n      duration: parseFloat(duration), // Animation duration in milliseconds\n      easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n      fill: 'forwards', // Keeps the final state of the animation\n    };\n  \n    return element.animate(keyframes, options);\n}\n\n// Function to create and run an single 3d x-axis rotation animation\nfunction rotateyinfinity(element, duration, classNameList) {\n\n    const keyframes = [\n      { transform: 'rotateY(0deg)', offset: 0 },        // Initial state, no rotation\n      { transform: 'rotateY(360deg)', offset: 1 }       // Final state, full 360-degree rotation\n    ];\n  \n    const options = {\n      duration: parseFloat(duration), // Animation duration in milliseconds\n      easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n      fill: 'forwards', // Keeps the final state of the animation\n      iterations: 'Infinity', // Infinite loop\n    };\n  \n    return element.animate(keyframes, options);\n}\n\n// Function to create and run an single 3d x-axis rotation animation\nfunction rotatexinfinity(element, duration, classNameList) {\n\n    const keyframes = [\n      { transform: 'rotateY(0deg)', offset: 0 },        // Initial state, no rotation\n      { transform: 'rotateY(360deg)', offset: 1 }       // Final state, full 360-degree rotation\n    ];\n  \n    const options = {\n      duration: parseFloat(duration), // Animation duration in milliseconds\n      easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n      fill: 'forwards', // Keeps the final state of the animation\n      iterations: 'Infinity', // Infinite loop\n    };\n  \n    return element.animate(keyframes, options);\n}\n\n//# sourceURL=webpack://YourPackageName/./src/rotate3d.js?");

/***/ }),

/***/ "./src/rubberband.js":
/*!***************************!*\
  !*** ./src/rubberband.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rubberBand: () => (/* binding */ rubberBand)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n // Importing the utility function for retrieving the easing function\n\n/**\n * Function to create and run the rubber band animation.\n * \n * @param {HTMLElement} element - The HTML element to apply the animation on.\n * @param {number} duration - The duration of the animation in milliseconds.\n * @param {Array} classNameList - An array of class names that help determine the easing function.\n * \n * @returns {Animation} - Returns the animation object for further control if needed.\n */\nfunction rubberBand(element, duration, classNameList) {\n\n    // Define keyframes for the rubber band animation, manipulating the 'scale3d' CSS property.\n    // 'scale3d' scales the element in the x, y, and z directions (3D scaling).\n    const keyframes = [\n        { transform: 'scale3d(1, 1, 3)', offset: 0 },        // Initial normal state\n        { transform: 'scale3d(1.25, 0.75, 3)', offset: 0.3 }, // Stretch horizontally at 30% progress\n        { transform: 'scale3d(0.75, 1.25, 3)', offset: 0.5 }, // Stretch vertically at 50% progress\n        { transform: 'scale3d(1.15, 0.85, 3)', offset: 0.7 }, // Slight horizontal stretch at 70% progress\n        { transform: 'scale3d(0.95, 1.05, 3)', offset: 0.9 }, // Slight vertical stretch at 90% progress\n        { transform: 'scale3d(1, 1, 3)', offset: 1 }         // Return to the normal state at 100% progress\n    ];\n\n    // Define animation options including duration, easing, and fill mode\n    const options = {\n        duration: parseFloat(duration), // Parse the input duration to a float for use in animation\n        easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Retrieve the easing function and replace '/' with ',' to match CSS syntax\n        fill: 'forwards' // Ensures the element keeps the final state of the animation after it completes\n    };\n\n    // Run the animation on the given element with the defined keyframes and options, returning the animation object\n    return element.animate(keyframes, options);\n}\n\n\n//# sourceURL=webpack://YourPackageName/./src/rubberband.js?");

/***/ }),

/***/ "./src/scale.js":
/*!**********************!*\
  !*** ./src/scale.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scalein: () => (/* binding */ scalein),\n/* harmony export */   scaleininfinite: () => (/* binding */ scaleininfinite),\n/* harmony export */   scaleout: () => (/* binding */ scaleout),\n/* harmony export */   scaleoutinfinite: () => (/* binding */ scaleoutinfinite)\n/* harmony export */ });\n// Function to create and run the scaleout animation\nfunction scaleout(element, duration, classNameList)  {\n    const keyframes = [\n        { transform: 'scale(1)', offset: 0 },\n        { transform: 'scale(1.1)', offset: 1 }\n    ];\n  \n    const options = {\n        duration: parseFloat(duration), // Animation duration in milliseconds\n        easing: 'ease-in', // Easing function\n        fill: 'forwards' // Keeps the final state of the animation\n    };\n  \n    return element.animate(keyframes, options);\n}\n\n// Function to create and run the scalein animation\nfunction scalein(element, duration, classNameList)  {\n    const keyframes = [\n        { transform: 'scale(1)', offset: 0 },\n        { transform: 'scale(0.9)', offset: 1 }\n    ];\n  \n    const options = {\n        duration: parseFloat(duration), // Animation duration in milliseconds\n        easing: 'ease-in', // Easing function\n        fill: 'forwards' // Keeps the final state of the animation\n    };\n  \n    return element.animate(keyframes, options);\n}\n\n// Function to create and run the scaleininfinite animation\nfunction scaleininfinite(element, duration, classNameList)  {\n    const keyframes = [\n        { transform: 'scale(1)', offset: 0 },\n        { transform: 'scale(0.9)', offset: 1 }\n    ];\n  \n    const options = {\n        duration: parseFloat(duration), // Animation duration in milliseconds\n        easing: 'ease-in', // Easing function\n        fill: 'forwards', // Keeps the final state of the animation\n        iterations: 'Infinity', // Infinite loop\n        direction: 'alternate' // Plays forward and then backward for a smooth loop\n    };\n  \n    return element.animate(keyframes, options);\n}\n\n// Function to create and run the scaleoutinfinite animation\nfunction scaleoutinfinite(element, duration, classNameList)  {\n    const keyframes = [\n        { transform: 'scale(1)', offset: 0 },\n        { transform: 'scale(1.1)', offset: 1 }\n    ];\n  \n    const options = {\n        duration: parseFloat(duration), // Animation duration in milliseconds\n        easing: 'ease-in', // Easing function\n        fill: 'forwards', // Keeps the final state of the animation\n        iterations: 'Infinity', // Infinite loop\n        direction: 'alternate' // Plays forward and then backward for a smooth loop\n    };\n  \n    return element.animate(keyframes, options);\n}\n\n//# sourceURL=webpack://YourPackageName/./src/scale.js?");

/***/ }),

/***/ "./src/shake.js":
/*!**********************!*\
  !*** ./src/shake.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shake: () => (/* binding */ shake),\n/* harmony export */   shakehorizontal: () => (/* binding */ shakehorizontal),\n/* harmony export */   shakevertical: () => (/* binding */ shakevertical),\n/* harmony export */   shakewobble: () => (/* binding */ shakewobble)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n\n\n// 🛠️ Function to run an infinite shake animation like a Sigma\n// ⚙️ Parameters:\n// - element: The DOM element to be shaken\n// - duration: The time (in ms) for the animation\n// - classNameList: List of classes to dynamically adjust the easing function\nfunction shake(element, duration, classNameList) {\n\n  // 💡 Keyframes defining the back-and-forth shaking motion\n  const keyframes = [\n    { transform: 'rotate(0deg)', offset: 0 },       // 📍 Start at 0° (neutral)\n    { transform: 'rotate(5deg)', offset: 0.25 },    // 🔄 Tilt right\n    { transform: 'rotate(0deg)', offset: 0.5 },     // 📍 Back to neutral\n    { transform: 'rotate(-5deg)', offset: 0.75 },   // 🔄 Tilt left\n    { transform: 'rotate(0deg)', offset: 1 }        // 📍 Back to neutral\n  ];\n\n  // 🎛️ Options for controlling animation behavior\n  const options = {\n    duration: parseFloat(duration), // 🕒 Parse the provided duration into milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // 🎯 Dynamically generate easing\n    fill: 'forwards', // 📌 Keeps the final state after the animation ends\n    iterations: Infinity // 🔁 Shake infinitely\n  };\n\n  // 🔥 Return the animation attached to the element\n  return element.animate(keyframes, options);\n}\n\n// 🛠️ Function to run an infinite horizontal shake animation like a Sigma\nfunction shakehorizontal(element, duration, classNameList) {\n\n  // 💡 Keyframes defining the vertical shake motion\n  const keyframes = [\n    { transform: 'translateY(0%)', offset: 0 },      // 📍 Start at 0 (neutral)\n    { transform: 'translateY(5%)', offset: 0.25 },   // 🔄 Move up slightly\n    { transform: 'translateY(0%)', offset: 0.5 },    // 📍 Back to neutral\n    { transform: 'translateY(-5%)', offset: 0.75 },  // 🔄 Move down slightly\n    { transform: 'translateY(0%)', offset: 1 }       // 📍 Back to neutral\n  ];\n\n  // 🎛️ Animation options for the shake\n  const options = {\n    duration: parseFloat(duration), // 🕒 Parse the provided duration into milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // 🎯 Dynamically generate easing\n    fill: 'forwards', // 📌 Keeps the final state after the animation ends\n    iterations: Infinity // 🔁 Shake infinitely\n  };\n\n  // 🔥 Return the animation attached to the element\n  return element.animate(keyframes, options);\n}\n\n// 🛠️ Function to run an infinite vertical shake animation like a Sigma\nfunction shakevertical(element, duration, classNameList) {\n\n  // 💡 Keyframes defining the horizontal shake motion\n  const keyframes = [\n    { transform: 'translateX(0%)', offset: 0 },      // 📍 Start at 0 (neutral)\n    { transform: 'translateX(5%)', offset: 0.25 },   // 🔄 Move right slightly\n    { transform: 'translateX(0%)', offset: 0.5 },    // 📍 Back to neutral\n    { transform: 'translateX(-5%)', offset: 0.75 },  // 🔄 Move left slightly\n    { transform: 'translateX(0%)', offset: 1 }       // 📍 Back to neutral\n  ];\n\n  // 🎛️ Animation options for the shake\n  const options = {\n    duration: parseFloat(duration), // 🕒 Parse the provided duration into milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // 🎯 Dynamically generate easing\n    fill: 'forwards', // 📌 Keeps the final state after the animation ends\n    iterations: Infinity // 🔁 Shake infinitely\n  };\n\n  // 🔥 Return the animation attached to the element\n  return element.animate(keyframes, options);\n}\n\n// 🛠️ Function to run an infinite wobble shake animation like a Sigma\nfunction shakewobble(element, duration, classNameList) {\n\n  // 💡 Keyframes combining both translation and rotation for a wobble effect\n  const keyframes = [\n    { transform: 'translate(0, 0) rotate(0deg)', offset: 0 },     // 📍 Start at neutral position and rotation\n    { transform: 'translate(5%, 5%) rotate(5deg)', offset: 0.25 },// 🔄 Move slightly and rotate right\n    { transform: 'translate(0, 0) rotate(0deg)', offset: 0.5 },   // 📍 Back to neutral\n    { transform: 'translate(-5%, 5%) rotate(-5deg)', offset: 0.75 }, // 🔄 Move slightly and rotate left\n    { transform: 'translate(0, 0) rotate(0deg)', offset: 1 }      // 📍 Back to neutral\n  ];\n\n  // 🎛️ Animation options for the wobble shake\n  const options = {\n    duration: parseFloat(duration), // 🕒 Parse the provided duration into milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // 🎯 Dynamically generate easing\n    fill: 'forwards', // 📌 Keeps the final state after the animation ends\n    iterations: Infinity // 🔁 Wobble infinitely\n  };\n\n  // 🔥 Return the animation attached to the element\n  return element.animate(keyframes, options);\n}\n\n\n//# sourceURL=webpack://YourPackageName/./src/shake.js?");

/***/ }),

/***/ "./src/skew.js":
/*!*********************!*\
  !*** ./src/skew.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   skewinfinite: () => (/* binding */ skewinfinite),\n/* harmony export */   skewleft: () => (/* binding */ skewleft),\n/* harmony export */   skewright: () => (/* binding */ skewright)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n\n\n// Function to create and run a skew left animation\nfunction skewleft(element, duration, classNameList) {\n\n    const keyframes = [\n        { transform: 'skew(0deg, 0deg)', offset: 0 },   // Initial state (no skew)\n        { transform: 'skew(20deg, 10deg)', offset: 0.5 },  // Skew to 20 degrees on X-axis, 10 degrees on Y-axis\n        { transform: 'skew(0deg, 0deg)', offset: 1 }    // Return to original state\n    ];\n\n    const options = {\n        duration: parseFloat(duration), // Animation duration in milliseconds\n        easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n        fill: 'forwards', // Keeps the final state of the animation\n    };\n\n  return element.animate(keyframes, options);\n}\n\n// Function to create and run a skew right animation\nfunction skewright(element, duration, classNameList) {\n\n    const keyframes = [\n        { transform: 'skew(0deg, 0deg)', offset: 0 },   // Initial state (no skew)\n        { transform: 'skew(-20deg, -10deg)', offset: 0.5 },  // Skew to 20 degrees on X-axis, 10 degrees on Y-axis\n        { transform: 'skew(0deg, 0deg)', offset: 1 }    // Return to original state\n    ];\n\n    const options = {\n        duration: parseFloat(duration), // Animation duration in milliseconds\n        easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n        fill: 'forwards', // Keeps the final state of the animation\n    };\n\n  return element.animate(keyframes, options);\n}\n\n// Function to create and run a skew infinite animation\nfunction skewinfinite(element, duration, classNameList) {\n\n    const keyframes = [\n        { transform: 'skew(0deg, 0deg)', offset: 0 },   // Initial state (no skew)\n        { transform: 'skew(20deg, 10deg)', offset: 0.25 },  // Skew to 20 degrees on X-axis, 10 degrees on Y-axis\n        { transform: 'skew(0deg, 0deg)', offset: 0.5 },  // Skew to 20 degrees on X-axis, 10 degrees on Y-axis\n        { transform: 'skew(-20deg, -10deg)', offset: 0.75 },  // Skew to 20 degrees on X-axis, 10 degrees on Y-axis\n        { transform: 'skew(0deg, 0deg)', offset: 1 }    // Return to original state\n    ];\n\n    const options = {\n        duration: parseFloat(duration), // Animation duration in milliseconds\n        easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n        fill: 'forwards', // Keeps the final state of the animation\n        iterations: Infinity, // Repeat the animation indefinitely\n    };\n\n  return element.animate(keyframes, options);\n}\n\n//# sourceURL=webpack://YourPackageName/./src/skew.js?");

/***/ }),

/***/ "./src/slide.js":
/*!**********************!*\
  !*** ./src/slide.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   slidein: () => (/* binding */ slidein),\n/* harmony export */   slideout: () => (/* binding */ slideout)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n/* harmony import */ var _utils_animation_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/animation-constant */ \"./utils/animation-constant.js\");\n// Import necessary functions from the cubic-bezier module\n\n\n\n\n\n/**\n * Executes a smooth slide-in animation on a given DOM element from the left.\n *\n * @param {HTMLElement} element - The target element to apply the slide-in animation.\n * @param {number} duration - Duration of the slide-in animation in milliseconds.\n * @param {Array<string>} classNameList - List of class names that may contain animation timing functions.\n */\nfunction slidein(element, duration, classNameList) {\n    // Determine the appropriate animation timing function from the provided class names.\n    let animationTimingFunction = (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList);\n    \n    // Extract cubic-bezier control points, either from the class or a default configuration.\n    let cubicBezierTiming = animationTimingFunction.includes('cubic-bezier') \n        ? (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.extractCubicBezier)(animationTimingFunction) \n        : (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.extractCubicBezier)(_utils_animation_constant__WEBPACK_IMPORTED_MODULE_1__.defaultAnimationTiming[animationTimingFunction]);\n\n    // Compute the interval duration by dividing the animation duration by the number of steps (100).\n    let interval = duration / 100;\n\n    //Initialize set interal index. \n    let index = 0;\n    \n    // Set the initial opacity of the element to 0.\n    element.style.opacity = 0;\n\n    // Generate a sequence of opacity values for the slide effect based on the cubic-bezier control points.\n    let timing = (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.generateOpacityValues)(...cubicBezierTiming, 1000);\n\n    // Set the element's initial position off-screen to the left.\n    element.style.transform = \"translateX(-100%)\";\n\n    //Initialize temprory value used to add and hold all previous values\n    let oldValue = 0;\n\n    // Establish an interval that will gradually change the element's position and opacity.\n    const intervalID = setInterval(() => {\n        // Compute the new position based on the timing array value corresponding to the current index.\n        oldValue += timing[index];\n\n        // Incrementally increase the opacity of the element.\n        element.style.opacity = parseFloat(element.style.opacity) + (timing[index] / 1);\n\n        // Move the element closer to its final position.\n        element.style.transform = `translateX(${(oldValue * 100) - 100}%)`;\n\n        // Move to the next timing value , Increment index value.\n        index += 1;\n\n        // Terminate the interval if the element reaches the end position.\n        if (index >= 100) {\n            clearInterval(intervalID);\n        }\n    }, interval);\n}\n\n/**\n * Executes a smooth slide-in animation on a given DOM element from the left.\n *\n * @param {HTMLElement} element - The target element to apply the slide-in animation.\n * @param {number} duration - Duration of the slide-in animation in milliseconds.\n * @param {Array<string>} classNameList - List of class names that may contain animation timing functions.\n */\nfunction slideout(element, duration, classNameList) {\n    // Determine the appropriate animation timing function from the provided class names.\n    let animationTimingFunction = (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList);\n    \n    // Extract cubic-bezier control points, either from the class or a default configuration.\n    let cubicBezierTiming = animationTimingFunction.includes('cubic-bezier') \n        ? (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.extractCubicBezier)(animationTimingFunction) \n        : (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.extractCubicBezier)(_utils_animation_constant__WEBPACK_IMPORTED_MODULE_1__.defaultAnimationTiming[animationTimingFunction]);\n\n    // Compute the interval duration by dividing the animation duration by the number of steps (100).\n    let interval = duration / 100;\n\n    //Initialize set interal index. \n    let index = 0;\n    \n    // Set the initial opacity of the element to 0.\n    element.style.opacity = 1;\n\n    // Generate a sequence of opacity values for the slide effect based on the cubic-bezier control points.\n    let timing = (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.generateOpacityValues)(...cubicBezierTiming, 1000);\n\n    // Set the element's initial position off-screen to the left.\n    element.style.transform = \"translateX(0%)\";\n    \n    //Initialize temprory value used to add and hold all previous values\n    let oldValue = 0;\n\n    // Establish an interval that will gradually change the element's position and opacity.\n    const intervalID = setInterval(() => {\n        // Compute the new position based on the timing array value corresponding to the current index.\n        oldValue += timing[index];\n\n        // Incrementally increase the opacity of the element.\n        element.style.opacity = parseFloat(element.style.opacity) - (timing[index] / 1);\n\n        // Move the element closer to its final position.\n        element.style.transform = `translateX(${(oldValue * 100) }%)`;\n\n        // Move to the next timing value , Increment index value.\n        index += 1;\n\n        // Terminate the interval if the element reaches the end position.\n        if (index >= 100) {\n            clearInterval(intervalID);\n        }\n    }, interval);\n}\n\n\n//# sourceURL=webpack://YourPackageName/./src/slide.js?");

/***/ }),

/***/ "./src/swing.js":
/*!**********************!*\
  !*** ./src/swing.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   swing: () => (/* binding */ swing)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n\n\n// Function to create and run the swing animation on a given element\nfunction swing(element, duration, classNameList) {\n    // Define keyframes for the swing animation\n    const keyframes = [\n        { transform: 'rotate(0deg)', offset: 0 },      // Initial position at 0 degrees\n        { transform: 'rotate(-30deg)', offset: 0.25 }, // Rotate to -30 degrees at 25% of the animation\n        { transform: 'rotate(0deg)', offset: 0.5 },    // Return to 0 degrees at 50% of the animation\n        { transform: 'rotate(30deg)', offset: 0.75 },  // Rotate to 30 degrees at 75% of the animation\n    ];\n\n    // Animation options\n    const options = {\n        duration: parseFloat(duration), // Convert duration to a number (milliseconds)\n        easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Set custom easing function\n        fill: 'forwards', // Maintain the final state after the animation completes\n        iterations: Infinity, // Repeat the animation indefinitely\n    };\n\n    // Set the origin for rotation transformations\n    element.style.transformOrigin = 'center -20px'; // Anchor point for rotation (center horizontally, -20px vertically)\n\n    // Apply the animation to the element\n    return element.animate(keyframes, options); // Return the animation object for further control\n}\n\n\n//# sourceURL=webpack://YourPackageName/./src/swing.js?");

/***/ }),

/***/ "./src/wobble.js":
/*!***********************!*\
  !*** ./src/wobble.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wobble: () => (/* binding */ wobble)\n/* harmony export */ });\n/* harmony import */ var _utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/cubic-bizer */ \"./utils/cubic-bizer.js\");\n\n\n// Function to create and run an wobble animation\nfunction wobble(element, duration, classNameList) {\n\n  const keyframes = [\n    { transform: 'none', offset: 0 },        // Initial state, no rotation\n    { transform: 'translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg)', offset: 0.15 },        // Initial state, no rotation\n    { transform: 'translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg)', offset: 0.3 },        // Initial state, no rotation\n    { transform: 'translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg)', offset: 0.45 },        // Initial state, no rotation\n    { transform: 'translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg)', offset: 0.6 },        // Initial state, no rotation\n    { transform: 'translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg)', offset: 0.75 },        // Initial state, no rotation\n    { transform: 'none', offset: 1 },        // Initial state, no rotation\n  ];\n\n  const options = {\n    duration: parseFloat(duration), // Animation duration in milliseconds\n    easing: (0,_utils_cubic_bizer__WEBPACK_IMPORTED_MODULE_0__.findAnimationTimingFunction)(classNameList).replaceAll('/', ','), // Easing function\n    fill: 'forwards', // Keeps the final state of the animation\n  };\n\n  return element.animate(keyframes, options);\n}\n\n//# sourceURL=webpack://YourPackageName/./src/wobble.js?");

/***/ }),

/***/ "./utils/animation-constant.js":
/*!*************************************!*\
  !*** ./utils/animation-constant.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultAnimationTiming: () => (/* binding */ defaultAnimationTiming)\n/* harmony export */ });\n// Define default animation timing functions as an array of objects\n// Each object represents a different timing function for CSS animations\nlet defaultAnimationTiming = {\n    'ease-in': 'cubic-bezier(0.42, 0, 1, 1)' ,\n    'ease-out': 'cubic-bezier(0, 0, 0.58, 1)' ,\n    'ease-in-out': 'cubic-bezier(0.42, 0, 0.58, 1)',\n    'linear': 'cubic-bezier(0, 0, 1, 1)',\n    'step-start': 'steps(1, start)',\n    'cubic-bezier' : ''\n};\n\n\n//# sourceURL=webpack://YourPackageName/./utils/animation-constant.js?");

/***/ }),

/***/ "./utils/cubic-bizer.js":
/*!******************************!*\
  !*** ./utils/cubic-bizer.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractCubicBezier: () => (/* binding */ extractCubicBezier),\n/* harmony export */   findAnimationTimingFunction: () => (/* binding */ findAnimationTimingFunction),\n/* harmony export */   generateOpacityValues: () => (/* binding */ generateOpacityValues)\n/* harmony export */ });\n/* harmony import */ var _utils_animation_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/animation-constant */ \"./utils/animation-constant.js\");\n\n\n/**\n * Computes the y-coordinate of a cubic-bezier curve at a given t value.\n *\n * @param {number} t - The time value, typically between 0 and 1.\n * @param {number} p1x - The x-coordinate of the first control point.\n * @param {number} p1y - The y-coordinate of the first control point.\n * @param {number} p2x - The x-coordinate of the second control point.\n * @param {number} p2y - The y-coordinate of the second control point.\n * @returns {number} - The y-coordinate of the curve at time t.\n */\nfunction cubicBezier(t, p1x, p1y, p2x, p2y) {\n    const cX = 3 * p1x;\n    const bX = 3 * (p2x - p1x) - cX;\n    const aX = 1 - cX - bX;\n\n    const cY = 3 * p1y;\n    const bY = 3 * (p2y - p1y) - cY;\n    const aY = 1 - cY - bY;\n\n    // Compute the x and y coordinates for the given t\n    const x = ((aX * t + bX) * t + cX) * t;\n    const y = ((aY * t + bY) * t + cY) * t;\n\n    return y;\n}\n\n/**\n * Generates an array of opacity values based on cubic-bezier control points.\n *\n * @param {number} p1x - The x-coordinate of the first control point.\n * @param {number} p1y - The y-coordinate of the first control point.\n * @param {number} p2x - The x-coordinate of the second control point.\n * @param {number} p2y - The y-coordinate of the second control point.\n * @returns {number[]} - An array of normalized opacity values.\n */\nfunction generateOpacityValues(p1x, p1y, p2x, p2y) {\n    const values = [];\n    const steps = 100;\n\n    // Generate opacity values for each step\n    for (let i = 0; i < steps; i++) {\n        const t = i / (steps - 1);\n        const easedValue = cubicBezier(t, p1x, p1y, p2x, p2y);\n        values.push(easedValue);\n    }\n\n    // Normalize the values so that their sum equals 1\n    const sum = values.reduce((acc, value) => acc + value, 0);\n    const normalizedValues = values.map(value => value / sum);\n    return normalizedValues;\n}\n\n/**\n * Extracts cubic-bezier control points from a class name string.\n *\n * @param {string} className - The class name containing cubic-bezier timing function.\n * @returns {number[]} - An array of cubic-bezier control points [p1x, p1y, p2x, p2y].\n */\nfunction extractCubicBezier(className) {\n    // Remove 'cubic-bezier' and parentheses, then split by comma to extract values\n    const cubicBeizerTiming = className\n        .replace('cubic-bezier', '')\n        .replace('(', '')\n        .replace(')', '')\n        .split('/')\n        .map(value => parseFloat(value.trim()));\n\n    return cubicBeizerTiming;\n}\n\n/**\n * Finds the appropriate animation timing function from a list of class names.\n *\n * @param {string[]} classNameList - A list of class names that may contain animation timing functions.\n * @returns {string} - The found animation timing function or 'linear' if none is found.\n */\nfunction findAnimationTimingFunction(classNameList) {\n    const timingClass = classNameList.find(className => {\n        console.log(className)\n        // Find if any key in defaultAnimationTiming matches part of the class name\n        return Object.keys(_utils_animation_constant__WEBPACK_IMPORTED_MODULE_0__.defaultAnimationTiming).find(timing => {\n            return className.includes(timing);\n        });\n    });\n\n    return timingClass ? timingClass : 'linear';\n}\n\n\n//# sourceURL=webpack://YourPackageName/./utils/cubic-bizer.js?");

/***/ }),

/***/ "./utils/index.js":
/*!************************!*\
  !*** ./utils/index.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_fade_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/fade.js */ \"./src/fade.js\");\n/* harmony import */ var _src_slide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/slide.js */ \"./src/slide.js\");\n/* harmony import */ var _src_bounce_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/bounce.js */ \"./src/bounce.js\");\n/* harmony import */ var _src_scale_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/scale.js */ \"./src/scale.js\");\n/* harmony import */ var _src_rotate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../src/rotate.js */ \"./src/rotate.js\");\n/* harmony import */ var _src_rotate3d_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../src/rotate3d.js */ \"./src/rotate3d.js\");\n/* harmony import */ var _src_flip_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../src/flip.js */ \"./src/flip.js\");\n/* harmony import */ var _src_shake_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../src/shake.js */ \"./src/shake.js\");\n/* harmony import */ var _src_swing_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../src/swing.js */ \"./src/swing.js\");\n/* harmony import */ var _src_pulse_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../src/pulse.js */ \"./src/pulse.js\");\n/* harmony import */ var _src_rubberband_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../src/rubberband.js */ \"./src/rubberband.js\");\n/* harmony import */ var _src_fancyslide_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../src/fancyslide.js */ \"./src/fancyslide.js\");\n/* harmony import */ var _src_jello_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../src/jello.js */ \"./src/jello.js\");\n/* harmony import */ var _src_wobble_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../src/wobble.js */ \"./src/wobble.js\");\n/* harmony import */ var _src_skew_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../src/skew.js */ \"./src/skew.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Array to hold animation details extracted from elements\nvar animationDetails = [];\n\n// Map of available animations by their names\nconst animations = {\n  'skewleft'        : _src_skew_js__WEBPACK_IMPORTED_MODULE_14__.skewleft,\n  'skewright'       : _src_skew_js__WEBPACK_IMPORTED_MODULE_14__.skewright,\n  'skewinfinite'    : _src_skew_js__WEBPACK_IMPORTED_MODULE_14__.skewinfinite,\n  'fadein'          : _src_fade_js__WEBPACK_IMPORTED_MODULE_0__.fadein,\n  'fadeout'         : _src_fade_js__WEBPACK_IMPORTED_MODULE_0__.fadeout,\n  'slidein'         : _src_slide_js__WEBPACK_IMPORTED_MODULE_1__.slidein,\n  'slideout'        : _src_slide_js__WEBPACK_IMPORTED_MODULE_1__.slideout,\n  'bounceinright'   : _src_bounce_js__WEBPACK_IMPORTED_MODULE_2__.bounceinright,\n  'bounceintop'     : _src_bounce_js__WEBPACK_IMPORTED_MODULE_2__.bounceintop,\n  'bounceinleft'    : _src_bounce_js__WEBPACK_IMPORTED_MODULE_2__.bounceinleft ,\n  'bounceinbottom'  : _src_bounce_js__WEBPACK_IMPORTED_MODULE_2__.bounceinbottom,\n  'scalein'         : _src_scale_js__WEBPACK_IMPORTED_MODULE_3__.scalein,\n  'scaleout'        : _src_scale_js__WEBPACK_IMPORTED_MODULE_3__.scaleout,\n  'scaleininfinite' : _src_scale_js__WEBPACK_IMPORTED_MODULE_3__.scaleininfinite,\n  'scaleoutinfinite': _src_scale_js__WEBPACK_IMPORTED_MODULE_3__.scaleoutinfinite,\n  'rotateright'     : _src_rotate_js__WEBPACK_IMPORTED_MODULE_4__.rotateright,\n  'rotateleft'      : _src_rotate_js__WEBPACK_IMPORTED_MODULE_4__.rotateleft,\n  'rotatex360to0'   : _src_rotate3d_js__WEBPACK_IMPORTED_MODULE_5__.rotatex360to0,\n  'rotatex0to360'   : _src_rotate3d_js__WEBPACK_IMPORTED_MODULE_5__.rotatex0to360,\n  'rotatey0to360'   : _src_rotate3d_js__WEBPACK_IMPORTED_MODULE_5__.rotatey0to360,\n  'rotatey360to0'   : _src_rotate3d_js__WEBPACK_IMPORTED_MODULE_5__.rotatey360to0,\n  'rotateyinfinity' : _src_rotate3d_js__WEBPACK_IMPORTED_MODULE_5__.rotateyinfinity,\n  'rotatexinfinity' : _src_rotate3d_js__WEBPACK_IMPORTED_MODULE_5__.rotatexinfinity,\n  'flip'            : _src_flip_js__WEBPACK_IMPORTED_MODULE_6__.flip,\n  'flipvertical'    : _src_flip_js__WEBPACK_IMPORTED_MODULE_6__.flipvertical,\n  'shakevertical'   : _src_shake_js__WEBPACK_IMPORTED_MODULE_7__.shakevertical,\n  'shakehorizontal' : _src_shake_js__WEBPACK_IMPORTED_MODULE_7__.shakehorizontal,\n  'shake'           : _src_shake_js__WEBPACK_IMPORTED_MODULE_7__.shake,\n  'shakewobble'     : _src_shake_js__WEBPACK_IMPORTED_MODULE_7__.shakewobble,\n  'swing'           : _src_swing_js__WEBPACK_IMPORTED_MODULE_8__.swing,\n  'pulse'           : _src_pulse_js__WEBPACK_IMPORTED_MODULE_9__.pulse,\n  'rubberband'      : _src_rubberband_js__WEBPACK_IMPORTED_MODULE_10__.rubberBand,\n  'fancyslide'      : _src_fancyslide_js__WEBPACK_IMPORTED_MODULE_11__.fancySlide,\n  'fancyslidereverse': _src_fancyslide_js__WEBPACK_IMPORTED_MODULE_11__.fancySlideReverse,\n  'jelloanimation'  : _src_jello_js__WEBPACK_IMPORTED_MODULE_12__.jelloAnimation,\n  'wobble'          : _src_wobble_js__WEBPACK_IMPORTED_MODULE_13__.wobble\n};\n\n// Event listener for DOMContentLoaded to initialize animation processing\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Select all elements with class names containing \"oands\"\n  const elements = document.querySelectorAll('[class*=\"oands\"]');\n  // Process the selected elements to find and apply animations\n  findAnimationDetails(elements);\n});\n\n/**\n * Extracts animation details from the given DOM elements and routes the animations.\n *\n * @param {NodeList} DOMelements - A NodeList of DOM elements to process.\n */\nfunction findAnimationDetails(DOMelements) {\n  DOMelements.forEach((currentElement) => {\n    const classNameList = [];\n    \n    // Collect class names starting with 'oands'\n    for (let className of currentElement.classList) {\n      if (className.startsWith('oands')) {\n        classNameList.push(className);\n      }\n    }\n    \n    // Store the class name list for the current element\n    animationDetails.push({ 'classNameList': classNameList });\n    \n    // Route animations based on class names\n    routeAnimation(currentElement, classNameList);\n  });\n}\n\n/**\n * Routes the appropriate animation to be applied on the given element based on class names.\n *\n * @param {HTMLElement} currentDOMelement - The DOM element to which the animation will be applied.\n * @param {string[]} classNameList - A list of class names associated with animations.\n */\nfunction routeAnimation(currentDOMelement, classNameList) {\n  classNameList.forEach((className) => {\n    try {\n      // Extract the animation name from the class name and apply it\n      const animationName = className.split('_')[1].toLowerCase();\n      const animationDuration = className.split('_')[2].toLowerCase() || 1000; \n      if (animations[animationName]) {\n        animations[animationName](currentDOMelement, animationDuration, className.split('_'));\n      } else {\n        throw new Error(`Animation \"${animationName}\" not found`);\n      }\n    } catch (error) {\n      // Log an error if the animation is not found or any issue occurs\n    }\n  });\n}\n\n// Uncomment the function below to test redirection or other functionality\n// function fadein() {\n//   console.log('Redirected successfully');\n// }\n\n\n//# sourceURL=webpack://YourPackageName/./utils/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./utils/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});